"use strict";(self.webpackChunkgraphql_kotlin_docs=self.webpackChunkgraphql_kotlin_docs||[]).push([[5173],{3333:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>c,toc:()=>m});var n=a(7462),r=a(3366),i=(a(7294),a(3905)),o=(a(8561),["components"]),s={id:"annotations",title:"Annotations"},l=void 0,c={unversionedId:"schema-generator/customizing-schemas/annotations",id:"schema-generator/customizing-schemas/annotations",title:"Annotations",description:"graphql-kotlin-schema-generator ships with a number of annotation classes to allow you to enhance your GraphQL schema",source:"@site/docs/schema-generator/customizing-schemas/annotations.md",sourceDirName:"schema-generator/customizing-schemas",slug:"/schema-generator/customizing-schemas/annotations",permalink:"/graphql-kotlin/docs/7.x.x/schema-generator/customizing-schemas/annotations",draft:!1,editUrl:"https://github.com/ExpediaGroup/graphql-kotlin/tree/master/website/docs/schema-generator/customizing-schemas/annotations.md",tags:[],version:"current",lastUpdatedBy:"Samuel Vazquez",lastUpdatedAt:1681792398,formattedLastUpdatedAt:"Apr 18, 2023",frontMatter:{id:"annotations",title:"Annotations"},sidebar:"docs",previous:{title:"Nested Resolvers and Shared Arguments",permalink:"/graphql-kotlin/docs/7.x.x/schema-generator/writing-schemas/nested-arguments"},next:{title:"Generator Configuration & Hooks",permalink:"/graphql-kotlin/docs/7.x.x/schema-generator/customizing-schemas/generator-config"}},p={},m=[],h={toc:m};function d(e){var t=e.components,a=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"graphql-kotlin-schema-generator")," ships with a number of annotation classes to allow you to enhance your GraphQL schema\nfor things that can't be directly derived from Kotlin reflection."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"./documenting-schema"},"@GraphQLDescription")," - Provide a description for a GraphQL field"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"./directives"},"@GraphQLDirective")," - Registers directive on a GraphQL field"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"./excluding-fields"},"@GraphQLIgnore")," - Exclude field from the GraphQL schema"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"./renaming-fields"},"@GraphQLName")," - Override the name used for the type"),(0,i.kt)("li",{parentName:"ul"},"Kotlin built in ",(0,i.kt)("a",{parentName:"li",href:"./deprecating-schema"},"@Deprecated")," - Apply the GraphQL ",(0,i.kt)("inlineCode",{parentName:"li"},"@deprecated")," directive on the field"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"./deprecating-schema"},"@GraphQLDeprecated")," - Apply the GraphQL ",(0,i.kt)("inlineCode",{parentName:"li"},"@deprecated")," directive but only in the schema, not in your own Kotlin code with ",(0,i.kt)("inlineCode",{parentName:"li"},"@Deprecated")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"./custom-type-reference"},"@GraphQLType")," - Allows specifying a return type that is not the Kotlin code")))}d.isMDXComponent=!0}}]);