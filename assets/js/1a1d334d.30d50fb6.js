"use strict";(self.webpackChunkgraphql_kotlin_docs=self.webpackChunkgraphql_kotlin_docs||[]).push([[17],{57866:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>p,toc:()=>l});var n=a(87462),r=a(63366),s=(a(67294),a(3905)),i=(a(95657),["components"]),o={id:"deprecating-schema",title:"Deprecating Schema"},c=void 0,p={unversionedId:"schema-generator/customizing-schemas/deprecating-schema",id:"schema-generator/customizing-schemas/deprecating-schema",title:"Deprecating Schema",description:"GraphQL schemas supports deprecation directive on",source:"@site/docs/schema-generator/customizing-schemas/deprecating-schema.md",sourceDirName:"schema-generator/customizing-schemas",slug:"/schema-generator/customizing-schemas/deprecating-schema",permalink:"/graphql-kotlin/docs/7.x.x/schema-generator/customizing-schemas/deprecating-schema",draft:!1,editUrl:"https://github.com/ExpediaGroup/graphql-kotlin/tree/master/website/docs/schema-generator/customizing-schemas/deprecating-schema.md",tags:[],version:"current",lastUpdatedBy:"Samuel Vazquez",lastUpdatedAt:1685659104,formattedLastUpdatedAt:"Jun 1, 2023",frontMatter:{id:"deprecating-schema",title:"Deprecating Schema"},sidebar:"docs",previous:{title:"Directives",permalink:"/graphql-kotlin/docs/7.x.x/schema-generator/customizing-schemas/directives"},next:{title:"Custom Types",permalink:"/graphql-kotlin/docs/7.x.x/schema-generator/customizing-schemas/custom-type-reference"}},d={},l=[{value:"Kotlin.Deprecated",id:"kotlindeprecated",level:2},{value:"GraphQLDeprecated",id:"graphqldeprecated",level:2}],h={toc:l},u="wrapper";function m(e){var t=e.components,a=(0,r.Z)(e,i);return(0,s.kt)(u,(0,n.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"GraphQL schemas supports deprecation directive on\nthe fields (which correspond to Kotlin properties and functions), input fields and enum values."),(0,s.kt)("p",null,"Deprecation of arguments is currently not supported ",(0,s.kt)("a",{parentName:"p",href:"https://youtrack.jetbrains.com/issue/KT-25643"},"in Kotlin"),"."),(0,s.kt)("h2",{id:"kotlindeprecated"},"Kotlin.Deprecated"),(0,s.kt)("p",null,"Instead of creating a custom annotation,\n",(0,s.kt)("inlineCode",{parentName:"p"},"graphql-kotlin-schema-generator")," just looks for the ",(0,s.kt)("inlineCode",{parentName:"p"},"@kotlin.Deprecated")," annotation and will use that annotation message\nfor the deprecated reason."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-kotlin"},'class SimpleQuery {\n  @Deprecated(message = "this query is deprecated", replaceWith = ReplaceWith("shinyNewQuery"))\n  fun simpleDeprecatedQuery(): Boolean = false\n\n  fun shinyNewQuery(): Boolean = true\n}\n')),(0,s.kt)("p",null,"The above query would produce the following GraphQL schema:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-graphql"},'type Query {\n  simpleDeprecatedQuery: Boolean! @deprecated(reason: "this query is deprecated, replace with shinyNewQuery")\n\n  shinyNewQuery: Boolean!\n}\n')),(0,s.kt)("h2",{id:"graphqldeprecated"},"GraphQLDeprecated"),(0,s.kt)("p",null,"A side-effect of using ",(0,s.kt)("inlineCode",{parentName:"p"},"@Deprecated")," is that it marks your own Kotlin code as being deprecated, which may not be what you want. Using ",(0,s.kt)("inlineCode",{parentName:"p"},"@GraphQLDeprecated")," you can add the ",(0,s.kt)("inlineCode",{parentName:"p"},"@deprecated")," directive to the GraphQL schema, but not have your Kotlin code show up as deprecated in your editor."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-kotlin"},'class SimpleQuery {\n  @GraphQLDeprecated(message = "this query is deprecated", replaceWith = ReplaceWith("shinyNewQuery"))\n  fun simpleDeprecatedQuery(): Boolean = false\n\n  fun shinyNewQuery(): Boolean = true\n}\n')))}m.isMDXComponent=!0}}]);