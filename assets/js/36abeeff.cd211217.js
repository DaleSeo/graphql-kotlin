"use strict";(self.webpackChunkgraphql_kotlin_docs=self.webpackChunkgraphql_kotlin_docs||[]).push([[3244],{5162:(e,t,r)=>{r.d(t,{Z:()=>l});var n=r(7294),a=r(6010);const o="tabItem_Ymn6";function l(e){var t=e.children,r=e.hidden,l=e.className;return n.createElement("div",{role:"tabpanel",className:(0,a.Z)(o,l),hidden:r},t)}},4866:(e,t,r)=>{r.d(t,{Z:()=>w});var n=r(7462),a=r(7294),o=r(6010),l=r(2466),i=r(6775),u=r(1980),s=r(7392),p=r(12);function c(e){return function(e){return a.Children.map(e,(function(e){if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')}))}(e).map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes,default:t.default}}))}function d(e){var t=e.values,r=e.children;return(0,a.useMemo)((function(){var e=null!=t?t:c(r);return function(e){var t=(0,s.l)(e,(function(e,t){return e.value===t.value}));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,r])}function v(e){var t=e.value;return e.tabValues.some((function(e){return e.value===t}))}function m(e){var t=e.queryString,r=void 0!==t&&t,n=e.groupId,o=(0,i.k6)(),l=function(e){var t=e.queryString,r=void 0!==t&&t,n=e.groupId;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:r,groupId:n});return[(0,u._X)(l),(0,a.useCallback)((function(e){if(l){var t=new URLSearchParams(o.location.search);t.set(l,e),o.replace(Object.assign({},o.location,{search:t.toString()}))}}),[l,o])]}function k(e){var t,r,n,o,l=e.defaultValue,i=e.queryString,u=void 0!==i&&i,s=e.groupId,c=d(e),k=(0,a.useState)((function(){return function(e){var t,r=e.defaultValue,n=e.tabValues;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!v({value:r,tabValues:n}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+r+'" but none of its children has the corresponding value. Available values are: '+n.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return r}var a=null!=(t=n.find((function(e){return e.default})))?t:n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:l,tabValues:c})})),f=k[0],g=k[1],h=m({queryString:u,groupId:s}),b=h[0],y=h[1],N=(t=function(e){return e?"docusaurus.tab."+e:null}({groupId:s}.groupId),r=(0,p.Nk)(t),n=r[0],o=r[1],[n,(0,a.useCallback)((function(e){t&&o.set(e)}),[t,o])]),w=N[0],q=N[1],C=function(){var e=null!=b?b:w;return v({value:e,tabValues:c})?e:null}();return(0,a.useLayoutEffect)((function(){C&&g(C)}),[C]),{selectedValue:f,selectValue:(0,a.useCallback)((function(e){if(!v({value:e,tabValues:c}))throw new Error("Can't select invalid tab value="+e);g(e),y(e),q(e)}),[y,q,c]),tabValues:c}}var f=r(2389);const g="tabList__CuJ",h="tabItem_LNqP";function b(e){var t=e.className,r=e.block,i=e.selectedValue,u=e.selectValue,s=e.tabValues,p=[],c=(0,l.o5)().blockElementScrollPositionUntilNextRender,d=function(e){var t=e.currentTarget,r=p.indexOf(t),n=s[r].value;n!==i&&(c(t),u(n))},v=function(e){var t,r=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":var n,a=p.indexOf(e.currentTarget)+1;r=null!=(n=p[a])?n:p[0];break;case"ArrowLeft":var o,l=p.indexOf(e.currentTarget)-1;r=null!=(o=p[l])?o:p[p.length-1]}null==(t=r)||t.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":r},t)},s.map((function(e){var t=e.value,r=e.label,l=e.attributes;return a.createElement("li",(0,n.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:function(e){return p.push(e)},onKeyDown:v,onClick:d},l,{className:(0,o.Z)("tabs__item",h,null==l?void 0:l.className,{"tabs__item--active":i===t})}),null!=r?r:t)})))}function y(e){var t=e.lazy,r=e.children,n=e.selectedValue;if(r=Array.isArray(r)?r:[r],t){var o=r.find((function(e){return e.props.value===n}));return o?(0,a.cloneElement)(o,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},r.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==n})})))}function N(e){var t=k(e);return a.createElement("div",{className:(0,o.Z)("tabs-container",g)},a.createElement(b,(0,n.Z)({},e,t)),a.createElement(y,(0,n.Z)({},e,t)))}function w(e){var t=(0,f.Z)();return a.createElement(N,(0,n.Z)({key:String(t)},e))}},8267:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>p,default:()=>k,frontMatter:()=>s,metadata:()=>c,toc:()=>v});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),l=(r(8561),r(4866)),i=r(5162),u=["components"],s={id:"ktor-overview",title:"Ktor Server Overview"},p=void 0,c={unversionedId:"server/ktor-server/ktor-overview",id:"server/ktor-server/ktor-overview",title:"Ktor Server Overview",description:"graphql-kotlin-ktor-server",source:"@site/docs/server/ktor-server/ktor-overview.mdx",sourceDirName:"server/ktor-server",slug:"/server/ktor-server/ktor-overview",permalink:"/graphql-kotlin/docs/7.x.x/server/ktor-server/ktor-overview",draft:!1,editUrl:"https://github.com/ExpediaGroup/graphql-kotlin/tree/master/website/docs/server/ktor-server/ktor-overview.mdx",tags:[],version:"current",lastUpdatedBy:"Andreas Denkmayr",lastUpdatedAt:1676043494,formattedLastUpdatedAt:"Feb 10, 2023",frontMatter:{id:"ktor-overview",title:"Ktor Server Overview"},sidebar:"docs",previous:{title:"Subscriptions",permalink:"/graphql-kotlin/docs/7.x.x/server/spring-server/spring-subscriptions"},next:{title:"Writing Schemas with Ktor",permalink:"/graphql-kotlin/docs/7.x.x/server/ktor-server/ktor-schema"}},d={},v=[{value:"Setup",id:"setup",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Content Negotiation",id:"content-negotiation",level:2},{value:"Default Routes",id:"default-routes",level:2}],m={toc:v};function k(e){var t=e.components,s=(0,a.Z)(e,u);return(0,o.kt)("wrapper",(0,n.Z)({},m,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/ExpediaGroup/graphql-kotlin/tree/master/servers/graphql-kotlin-ktor-server"},"graphql-kotlin-ktor-server"),"\nis a Ktor Server Plugin that simplifies setup of your GraphQL server."),(0,o.kt)("h2",{id:"setup"},"Setup"),(0,o.kt)("p",null,"The simplest way to create a new Ktor Server app is by generating one using ",(0,o.kt)("a",{parentName:"p",href:"https://start.ktor.io/"},"https://start.ktor.io/"),"."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Image of https://start.ktor.io/",src:r(8674).Z,width:"641",height:"693"})),(0,o.kt)("p",null,"Once you get the sample application setup locally, you will need to add ",(0,o.kt)("inlineCode",{parentName:"p"},"graphql-kotlin-ktor-server")," dependency:"),(0,o.kt)(l.Z,{defaultValue:"gradle",values:[{label:"Gradle Kotlin",value:"gradle"},{label:"Maven",value:"maven"}],mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"gradle",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'implementation("com.expediagroup", "graphql-kotlin-ktor-server", latestVersion)\n'))),(0,o.kt)(i.Z,{value:"maven",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n    <groupId>com.expediagroup</groupId>\n    <artifactId>graphql-kotlin-ktor-server</artifactId>\n    <version>${latestVersion}</version>\n</dependency>\n")))),(0,o.kt)("h2",{id:"configuration"},"Configuration"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"graphql-kotlin-ktor-server")," is a Ktor Server Plugin and you to manually install it in your ",(0,o.kt)("a",{parentName:"p",href:"https://ktor.io/docs/modules.html"},"module"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'class HelloWorldQuery : Query {\n    fun hello(): String = "Hello World!"\n}\n\nfun Application.graphQLModule() {\n    install(GraphQL) {\n        schema {\n            packages = listOf("com.example")\n            queries = listOf(\n                HelloWorldQuery()\n            )\n        }\n    }\n}\n')),(0,o.kt)("p",null,"If you use ",(0,o.kt)("inlineCode",{parentName:"p"},"EngineMain")," to start your Ktor server, you can specify your module configuration in your ",(0,o.kt)("inlineCode",{parentName:"p"},"application.conf")," (default)\nor ",(0,o.kt)("inlineCode",{parentName:"p"},"application.yaml")," (requires additional ",(0,o.kt)("inlineCode",{parentName:"p"},"ktor-server-config-yaml")," dependency) file."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"ktor {\n    application {\n        modules = [ com.example.ApplicationKt.graphQLModule ]\n    }\n}\n")),(0,o.kt)("h2",{id:"content-negotiation"},"Content Negotiation"),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("inlineCode",{parentName:"p"},"graphql-kotlin-ktor-server")," automatically configures ",(0,o.kt)("inlineCode",{parentName:"p"},"ContentNegotiation")," plugin with ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/FasterXML/jackson"},"Jackson"),"\nserialization. ",(0,o.kt)("inlineCode",{parentName:"p"},"kotlinx-serialization")," is currently not supported.")),(0,o.kt)("h2",{id:"default-routes"},"Default Routes"),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("inlineCode",{parentName:"p"},"graphql-kotlin-ktor-server")," automatically configures ",(0,o.kt)("inlineCode",{parentName:"p"},"Routing")," plugin if it wasn't configured yet. Attempting to re-install\n(vs applying additional configuration) ",(0,o.kt)("inlineCode",{parentName:"p"},"Routing")," after ",(0,o.kt)("inlineCode",{parentName:"p"},"GraphQL")," plugin may result in errors.")),(0,o.kt)("p",null,"Your newly created GraphQL server starts up with following preconfigured default routes:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"/graphql")," - GraphQL server endpoint used for processing queries and mutations"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"/sdl")," - Convenience endpoint that returns current schema in Schema Definition Language format"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"/graphiql")," - ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/graphql/graphiql"},"An official IDE")," under the GraphQL Foundation")))}k.isMDXComponent=!0},8674:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/ktor-initializer-a329a7877e50e02f8e8913aac9f41230.png"}}]);